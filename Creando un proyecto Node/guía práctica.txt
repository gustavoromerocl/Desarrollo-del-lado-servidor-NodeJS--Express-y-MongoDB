##Guía práctica de Setup Proyecto
Imitando lo que viste en el reciente tutorial, realiza los pasos a continuación.  

Recuerda que, para comprobar cuánto has aprendido, al final del curso otros participantes medirán tu avance en estas prácticas. 

Instala Nodejs. 
Instala express y express generator. 
Crea un proyecto de red de bicicletas utilizando express generator y utilizando el view engine pug. 
Levanta el servidor en el puerto default (3000), o configúralo si corresponde, y asegúrate de ver el mensaje de bienvenida a Express. 
Vincula tu proyecto con el repositorio de Bitbucket creado previamente. 
Haz un commit con el mensaje de setup del proyecto.


##Guía práctica de Configurar template HTML
Imitando lo que viste en el reciente tutorial, realiza los pasos a continuación.  

Recuerda que, para comprobar cuánto has aprendido, al final del curso otros participantes medirán tu avance en estas prácticas. 

Visita el sitio Boostrap Themes:    https://startbootstrap.com/themes/
Descarga grayscale (  https://startbootstrap.com/themes/grayscale/  ) u otro template que te guste. 
Configura en tu proyecto creado en la práctica anterior. 
Utiliza el sitio https://html-to-pug.com/ para pasar del html al pug. Puedes usar otra herramienta similar, si te resulta más cómodo. 
Levanta el servidor y revisa que se vea correctamente, comparándolo con la versión original. 
Realiza un commit con los cambios realizados. 

##Guía práctica de MVC Bicicletas
Imitando lo que viste en el reciente tutorial, realiza los pasos a continuación.  

Recuerda que, para comprobar cuánto has aprendido, al final del curso otros participantes medirán tu avance en estas prácticas. 

Utilizando npm, instala nodemon como dependencia de desarrollo. 
Crea un script npm en el archivo package.json, debajo del “start”, que se llame “devstart” y levante el servidor utilizando npdemon. 
Crea el modelo de bicicleta con los atributos que mostramos en el tutorial. 
Crea los métodos de bicicleta tal como lo mostramos en el tutorial. 
Agrega un par de bicicletas a la colección que conoce la bicicleta en memoria, con las ubicaciones cercanas al centro del mapa que agregaste previamente (de esta forma, te simplifica la revisión de la carga). 
Crea el controller web de las bicicletas. 
Crea el router de las bicicletas. 
Crea los métodos de listado, creación, eliminación y actualización de las bicicletas via web. 
Revisa el proceso entero de listado, carga y demás operaciones realizadas. 
Realiza un commit con los cambios realizados. 
  

##Guía práctica de API Bicicletas
Imitando lo que viste en el reciente tutorial, realiza los pasos a continuación.  

Recuerda que, para comprobar cuánto has aprendido, al final del curso otros participantes medirán tu avance en estas prácticas. 

Crea una carpeta para guardar las API dentro de controller y otra carpeta dentro de router. 
Crea el controller de bicicleta para manejar tu API de creación, actualización, listado y eliminación. 
Crea las rutas de bicicleta para tu API de creación, actualización, listado y eliminación. 
Crea los métodos en el controller de listado, creación, actualización, listado y eliminación. 
Instala Postman para testear tu API (https://www.getpostman.com). 
Revisa cada endpoint de tu API utilizando Postman. 
Realiza un commit con los cambios realizados. 